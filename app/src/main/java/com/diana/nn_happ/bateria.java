
package uma.diana.nn_happ;

/*
	How to use:

		// Create and open a device to play effects
		// This should be done only once per application

		Device device = Device.newDevice();

		// Create an IVT buffer with the exported effect definitions

		IVTBuffer ivtBuffer = new IVTBuffer(bateria.ivt);

		// Play one of the effect defined in the IVTBuffer

		device.playIVTEffect(ivtBuffer, bateria.Decrescendo);

		// When the device is not needed anymore,
		// it must be closed to avoid resource leak

		device.close();

		// For more details, refer to the ImmVibe API Reference.

*/

class bateria
{
	public static final int Decrescendo = 0;

	public static final int Alerta = 1;

	public static final int MagSweep = 2;

	public static final byte[] ivt = 
	{
		(byte)0x01, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x2c, (byte)0x00, (byte)0x3e, (byte)0x00,
		(byte)0x00, (byte)0x00, (byte)0x0d, (byte)0x00, (byte)0x15, (byte)0x00, (byte)0xf1, (byte)0xe0,
		(byte)0x01, (byte)0xe2, (byte)0x00, (byte)0x00, (byte)0xf1, (byte)0xe0, (byte)0x02, (byte)0xe2,
		(byte)0x01, (byte)0x2c, (byte)0xff, (byte)0x20, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x7f,
		(byte)0x00, (byte)0x00, (byte)0xb1, (byte)0x30, (byte)0xc4, (byte)0x09, (byte)0x00, (byte)0x00,
		(byte)0x7f, (byte)0x00, (byte)0x00, (byte)0x20, (byte)0x9c, (byte)0x00, (byte)0x00, (byte)0x00,
		(byte)0x00, (byte)0x00, (byte)0x41, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x18, (byte)0x00,
		(byte)0x26, (byte)0x00, (byte)0x44, (byte)0x00, (byte)0x65, (byte)0x00, (byte)0x63, (byte)0x00,
		(byte)0x72, (byte)0x00, (byte)0x65, (byte)0x00, (byte)0x73, (byte)0x00, (byte)0x63, (byte)0x00,
		(byte)0x65, (byte)0x00, (byte)0x6e, (byte)0x00, (byte)0x64, (byte)0x00, (byte)0x6f, (byte)0x00,
		(byte)0x00, (byte)0x00, (byte)0x41, (byte)0x00, (byte)0x6c, (byte)0x00, (byte)0x65, (byte)0x00,
		(byte)0x72, (byte)0x00, (byte)0x74, (byte)0x00, (byte)0x61, (byte)0x00, (byte)0x00, (byte)0x00,
		(byte)0x4d, (byte)0x00, (byte)0x61, (byte)0x00, (byte)0x67, (byte)0x00, (byte)0x53, (byte)0x00,
		(byte)0x77, (byte)0x00, (byte)0x65, (byte)0x00, (byte)0x65, (byte)0x00, (byte)0x70, (byte)0x00,
		(byte)0x00, (byte)0x00
	};
}
